#!/usr/bin/env ruby

require "drb.rb"

class Client
	SERVER_PORT = "1370"
	
	def initialize
		@src = (1111 + rand(8888)).to_s
		@outgoing = DRbObject.new_with_uri("druby://localhost:#{SERVER_PORT}")
		@incoming = DRb.start_service("druby://localhost:#{SERVER_PORT}#{@src}", self)
	end

	def print(str)
		$stdout.print(str)
		$stdout.flush
	end

	def start
		while(true)
			print "< "
			str = $stdin.gets.strip
			@outgoing.incoming(@src, str)

			# to allow time for a message to
			# come back; yes, this is horrible
			sleep 0.5
		end
	end

	def incoming(msg)
		print "> #{msg}\n"
	end
end

# exit gracefully if
# ctrl+c is received
trap("INT") do
	puts
	exit
end

Client.new.start
